upstream lw_app_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server unix:/home/ubuntu/living_webinar/run/app.sock fail_timeout=0;
}

server {

    listen   80;
    server_name ec2-18-190-105-126.us-east-2.compute.amazonaws.com;

    client_max_body_size 4G;

    access_log /home/ubuntu/logs/nginx/nginx-access.log;
    error_log  /home/ubuntu/logs/nginx/nginx-error.log;
 
    location /static/ {
        alias   /home/ubuntu/living_webinar/web/web/static/;
    }
    
    location /media/ {
        alias   /home/ubuntu/living_webinar/web/web/media/;
    }

    location / {

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://lw_app_server;
            break;
        }
    }

    # Error pages
    #error_page 500 502 503 504 /500.html;
    #location = /500.html {
    #    root /webapps/hello_django/static/;
    #}
}